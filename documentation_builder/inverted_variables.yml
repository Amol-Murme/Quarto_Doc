75.84%: Validation_Auto
74.98%: OOS_test_Auto
XGBoost: Algorithm_Name
XGBoost_2_AutoML_20210218_195405: Algorithm_Model
20000: Algorithm_No_of_Observation
70: Algorithm_Features
? is a machine learning technique for regression and classification problems, which
  produces a prediction model in the form of an ensemble of weak prediction models,
  typically decision trees. It builds the model in a stage-wise fashion by optimization
  of a loss function.
: Algorithm_Overview
EXECUTIVE SUMMARY: Headings_h1
MODEL PERFORMANCE SUMMARY: Headings_h2
DATASET: Headings_h3
EDA: Headings_h4
Methodology Overview: Headings_h5
Data Preparation: Headings_h5_1
Feature Transformation: Headings_h5_2
Model Tuning: Headings_h5_3
Model Performance Evaluation: Headings_h5_4
Model Stability: Headings_h6_4
Model Details: Headings_h6
Model Hyperparameters: Headings_h6_1
Important Features: Headings_h6_2
Model Performance: Headings_h6_3
Model Scoring History: Headings_h6_5
Detailed Information regarding model.: Model_Details_details
? The dataset is randomly split into train, validation and holdout test datasets.
  Train data is used for model fitting. Validation dataset is used for model tuning
  i.e. finding the optimal combination of hyperparameters that provide the best fit
  on a given dataset. Holdout test dataset is used to arrive at an unbiased estimate
  of OOS performance of the model.
: Data_Preparation
? Typically all features are converted into numeric features. This is a mandatory
  transformation for many algorithms such as XGBoost.
: Feature_Transformation
? Various models are fitted to the train dataset with multiple combination of hyperparameters
  (HP). These HP typically control model capacity (large capacity models will provide
  better fit on train data but may fail to generalize to OOS dataset), model complexity
  (typically models with larger capacity are also more complex) and model generalization
  (to prevent overfitting to train data).
: Model_Tunning
? Performance of trained models is compared on validation dataset using different
  statistics. Final HP combination and the resultant final model is selected on basis
  of performance on the validation dataset.
: Model_Perfor_Eval
? Model stability is checked by detecting drift/shift in features between train, validation
  and test dataset. This is done by computing Stability Index at model and individual
  feature level to identify if model is stable or not.
: Model_Stability
