Validation_Auto: 75.84%

OOS_test_Auto: 74.98%

Algorithm_Name: XGBoost
Algorithm_Model: XGBoost_2_AutoML_20210218_195405
Algorithm_No_of_Observation: 20000
Algorithm_Features: 70
Algorithm_Overview: "is a machine learning technique for regression and classification problems, which produces a prediction model in the form of an ensemble of weak prediction models, typically decision trees. It builds the model in a stage-wise fashion by optimization of a loss function."

Headings_h1: EXECUTIVE SUMMARY
Headings_h2: MODEL PERFORMANCE SUMMARY
Headings_h3: DATASET
Headings_h4: EDA
Headings_h5: Methodology Overview
Headings_h5_1: Data Preparation
Headings_h5_2: Feature Transformation
Headings_h5_3: Model Tuning
Headings_h5_4: Model Performance Evaluation
Headings_h5_5: Model Stability
Headings_h6: Model Details
Headings_h6_1: Model Hyperparameters
Headings_h6_2: Important Features
Headings_h6_3: Model Performance
Headings_h6_4: Model Stability Statistics
Headings_h6_5: Model Scoring History

Model_Details_details: "Detailed Information regarding model."

Data_Preparation: "The dataset is randomly split into train, validation and holdout test datasets. Train data is used for model fitting. Validation dataset is used for model tuning i.e. finding the optimal combination of hyperparameters that provide the best fit on a given dataset. Holdout test dataset is used to arrive at an unbiased estimate of OOS performance of the model."

Feature_Transformation: "Typically all features are converted into numeric features. This is a mandatory transformation for many algorithms such as XGBoost."

Model_Tunning: "Various models are fitted to the train dataset with multiple combination of hyperparameters (HP). These HP typically control model capacity (large capacity models will provide better fit on train data but may fail to generalize to OOS dataset), model complexity (typically models with larger capacity are also more complex) and model generalization (to prevent overfitting to train data)."

Model_Perfor_Eval: "Performance of trained models is compared on validation dataset using different statistics. Final HP combination and the resultant final model is selected on basis of performance on the validation dataset."

Model_Stability: "Model stability is checked by detecting drift/shift in features between train, validation and test dataset. This is done by computing Stability Index at model and individual feature level to identify if model is stable or not."