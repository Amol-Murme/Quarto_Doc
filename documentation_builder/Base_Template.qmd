---
title: "ABC Bank ltd."
execute:
   code-fold: true
   echo: false
format:
  docx:
    code-fold: true
    toc: true
    toc-depth: 3
    toc-location: right
    number-sections: true
    number-depth: 3
    standalone: true
    toc-title: Contents
  pdf:
    toc: true
    toc-depth: 3
    toc-location: right
    number-sections: true
    number-depth: 3
    standalone: true
    toc-title: Contents
    fig-align: center
    fig-pos: "H"

jupyter: python3
---

## [{{< var editable_Headings_h1 >}}]{id="editable_Headings_h1" contenteditable="true"}
  [{{< var editable_Headings_h1_p >}}]{id="editable_Headings_h1_p" contenteditable="true"}

{{< pagebreak >}}
## [{{< var editable_Headings_h2 >}}]{id="editable_Headings_h2" contenteditable="true"}

```{python}
import pandas as pd
df = pd.read_csv('../input/MODEL_PERFORMANCE_SUMMARY.csv') 
#print(df.to_string(index= False))

from IPython.display import Markdown
from tabulate import tabulate
def align_table(tabulated ,align):

    if align == "right":
        if "-|" in tabulated:
            new_text = tabulated.replace("-|", ":|")
    elif align == "left":
        if "|-" in tabulated:
            new_text = tabulated.replace("|-", "|:") 
    else:
        new_text = tabulated.replace("|-", "|:")
        new_text = new_text.replace("-|", ":|")

    # print(new_text)
    return new_text
headers = df.columns.tolist()
table = df.values.tolist()
org_table = "\n\n"
org_table += align_table(tabulate(table, headers = headers, tablefmt="github"), "center")
org_table += "\n\n"
org_table += r': {tbl-colwidths="[50,50]"}'
org_table += "\n\n\n" 
#print(org_table)
Markdown(org_table)
```
{{< pagebreak >}}

## [{{< var editable_Headings_h3 >}}]{id="editable_Headings_h3" contenteditable="true"}
  [[{{< var editable_Headings_h3_p >}}]{id="editable_Headings_h3_p" contenteditable="true"}

```{python}
import pandas as pd
df = pd.read_csv('../input/DATASET.csv')
#print(df.to_string(index= False))

from IPython.display import Markdown
from tabulate import tabulate
def align_table(tabulated ,align):

    if align == "right":
        if "-|" in tabulated:
            new_text = tabulated.replace("-|", ":|")
    elif align == "left":
        if "|-" in tabulated:
            new_text = tabulated.replace("|-", "|:") 
    else:
        new_text = tabulated.replace("|-", "|:")
        new_text = new_text.replace("-|", ":|")

    # print(new_text)
    return new_text
headers = df.columns.tolist()
table = df.values.tolist()
org_table = "\n\n"
org_table += align_table(tabulate(table, headers = headers, tablefmt="github"), "center")
org_table += "\n\n"
org_table += r': {tbl-colwidths="[50,50]"}'
org_table += "\n\n\n" 
#print(org_table)
Markdown(org_table)
```
{{< pagebreak >}}

## [{{< var editable_Headings_h4 >}}]{id="editable_Headings_h4" contenteditable="true"}
  [{{< var editable_Headings_h4_p >}}]{id="editable_Headings_h4_p" contenteditable="true"}
```{python}
import pandas as pd
df = pd.read_csv('../input/EDA.csv')
#print(df.to_string(index= False))

from IPython.display import Markdown
from tabulate import tabulate
def align_table(tabulated ,align):

    if align == "right":
        if "-|" in tabulated:
            new_text = tabulated.replace("-|", ":|")
    elif align == "left":
        if "|-" in tabulated:
            new_text = tabulated.replace("|-", "|:") 
    else:
        new_text = tabulated.replace("|-", "|:")
        new_text = new_text.replace("-|", ":|")

    # print(new_text)
    return new_text
headers = df.columns.tolist()
table = df.values.tolist()
org_table = "\n\n"
org_table += align_table(tabulate(table, headers = headers, tablefmt="github"), "center")
org_table += "\n\n"
#org_table += r': {tbl-colwidths="[34,33,33]"}'
org_table += "\n\n\n" 
#print(org_table)
Markdown(org_table)
```
{{< pagebreak >}}

## [{{< var editable_Headings_h5 >}}]{id="editable_Headings_h5" contenteditable="true"}

  [{{< var editable_Headings_h5_p >}}]{id="editable_Headings_h5_p" contenteditable="true"}

[{{< var editable_Headings_h5_p1 >}}]{id="editable_Headings_h5_p1" contenteditable="true"}


 ![Model Development Pipeline](../input/Model_development_pipeline.png)

### [{{< var editable_Headings_h5_1 >}}]{id="editable_Headings_h5_1" contenteditable="true"}
  [{{< var editable_Headings_h5_1_p >}}]{id="editable_Headings_h5_1_p" contenteditable="true"}

### [{{< var editable_Headings_h5_2 >}}]{id="editable_Headings_h5_2" contenteditable="true"}
  [{{< var editable_Headings_h5_2_p >}}]{id="editable_Headings_h5_2_p" contenteditable="true"}


### [{{< var editable_Headings_h5_3 >}}]{id="editable_Headings_h5_3" contenteditable="true"}
  [{{< var editable_Headings_h5_3_p >}}]{id="editable_Headings_h5_3_p" contenteditable="true"}


### [{{< var editable_Headings_h5_4 >}}]{id="editable_Headings_h5_4" contenteditable="true"}
  [{{< var editable_Headings_h5_4_p >}}]{id="editable_Headings_h5_4_p" contenteditable="true"}


### [{{< var editable_Headings_h5_5 >}}]{id="editable_Headings_h5_5" contenteditable="true"}
  [{{< var editable_Headings_h5_5_p >}}]{id="editable_Headings_h5_5_p" contenteditable="true"}
{{< pagebreak >}}

## [{{< var editable_Headings_h6 >}}]{id="editable_Headings_h6" contenteditable="true"}
  [{{< var editable_Headings_h6_p >}}]{id="editable_Headings_h6_p" contenteditable="true"}

### [{{< var editable_Headings_h6_1 >}}]{id="editable_Headings_h6_1" contenteditable="true"}
  [{{< var editable_Headings_h6_1_p >}}]{id="editable_Headings_h6_1_p" contenteditable="true"}
```{python}
import pandas as pd

df = pd.read_csv('../input/Model_Hyperparameters.csv')
#print(df.to_string(index= False))

from IPython.display import Markdown
from tabulate import tabulate
def align_table(tabulated ,align):

    if align == "right":
        if "-|" in tabulated:
            new_text = tabulated.replace("-|", ":|")
    elif align == "left":
        if "|-" in tabulated:
            new_text = tabulated.replace("|-", "|:") 
    else:
        new_text = tabulated.replace("|-", "|:")
        new_text = new_text.replace("-|", ":|")

    # print(new_text)
    return new_text
headers = df.columns.tolist()
table = df.values.tolist()
org_table = "\n\n"
org_table += align_table(tabulate(table, headers = headers, tablefmt="github"), "center")
org_table += "\n\n"
org_table += r': {tbl-colwidths="[50,50]"}'
org_table += "\n\n\n" 
#print(org_table)
Markdown(org_table)

# print(tabulate(
#   table, 
#   headers=df.columns,
#   tablefmt= "grid"
# ))
```


### [{{< var editable_Headings_h6_2 >}}]{id="editable_Headings_h6_2" contenteditable="true"}
  
[{{< var editable_Headings_h6_2_p >}}]{id="editable_Headings_h6_2_p" contenteditable="true"}

 ![Global Variable Importance Graph](../input/Important_Features.png)
  
[{{< var editable_Headings_h6_2_p1 >}}]{id="editable_Headings_h6_2_p1" contenteditable="true"}

 ![Partial Dependence Plot for Top-2 Variables](../input/PDP.png)




### [{{< var editable_Headings_h6_3 >}}]{id="editable_Headings_h6_3" contenteditable="true"}

[{{< var editable_Headings_h6_3_p >}}]{id="editable_Headings_h6_3_p" contenteditable="true"}

**Validation dataset**

 ![Model Performance on Validation dataset](../input/Model_Perf_on_Validation_Dataset.png){width="400"}

**Test dataset**

 ![Model Performance on Test dataset](../input/Model_Perf_on_Test_Dataset.png){width="400"}

### [{{< var editable_Headings_h6_4 >}}]{id="editable_Headings_h6_4" contenteditable="true"}

 [{{< var editable_Headings_h6_4_p >}}]{id="editable_Headings_h6_4_p" contenteditable="true"}

  **Train vs. Validation dataset**
   ![Model Stability (Val vs. Train dataset)](../input/Train%20_vs_%20Validation%20_dataset.png){width="400"}

  **Validation vs. Test dataset**
   ![Model Stability (Val vs. Test dataset)](../input/Validation_vs_Test%20dataset.png){width="400"}

### [{{< var editable_Headings_h6_5 >}}]{id="editable_Headings_h6_5" contenteditable="true"}

 [{{< var editable_Headings_h6_5_p >}}]{id="editable_Headings_h6_5_p" contenteditable="true"}
    
 ![Model Scoring History](../input/Scoring_History.png){width="500"}

